<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc"
  xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
    http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
    http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd"
>
  <aop:aspectj-autoproxy />
  <!-- Spring AOP 자동 프록시 설정 -->
  

  <!-- Srping JDBC -->
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="oracle.jdbc.OracleDriver" />
    <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
    <property name="username" value="night" />
    <property name="password" value="123456" />
  </bean>

  <!-- Spring과 MyBatis연결, mybatis-config.xml파일 설정(데이터저장 빈 클래스 객체 별칭이름을 관리) MyBatis Mapper태그 
    xml 설정(SQL문을 별도로 관리) -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
    lazy-init="true" scope="prototype"
  >
    <property name="dataSource" ref="dataSource" />
    <!-- setter()메서드를통한 의존성주입: myBatis의 dataSource에 ref에 내가 설정한 beanId 주입 -->

    <property name="configLocation" value="classpath:/mybatis-config.xml" />
    <!-- classpath경로는 src/main/resources -->

    <property name="mapperLocations" value="classpath:net/daum/mappers/*/*.xml" />
    <!-- SQL문을 별도로 관리하는 mybatis Mapper xml태그 경로 -->
  </bean>

  <!-- Spring 트랜잭션 매니저(트랜잭션 관리자) 설정 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" /> <!-- Setter 의존성 주입 -->
  </bean>
  
  <tx:annotation-driven/> <!-- 트랜잭션 설정 어노테이션: @Transactional을 통한 트랜잭션 관리가능 -->
  
  
  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
    destroy-method="clearCache"
  >
    <!-- 임시메모리 cache를 비워서 데이터베이스연결을 해제함 -->
    <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
    <!-- 생성자를 통한 의존성 주입, ref 빈아이디를 호출. -->
  </bean>

  <context:component-scan base-package="net.daum.dao" />
  <!-- net.daum.dao패키지의 @Component를 스캔함 -->
  <context:component-scan base-package="net.daum.service" />
  <!--  서비스 추가 목적
    1. 컨트롤러와 모델 DAO 연결하는 중간 매개체 역할
    2. 고객의 추가 요구사항을 반영
    3. 스프링의 AOP를 통한 트랜잭션 적용이 핵심 (데이터의 불일치 현상을 제거=일관성 유지)
   -->
   
   <aop:config /> <!-- AOP XML 환경설정  -->
</beans>